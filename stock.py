# -*- coding: utf-8 -*-
"""STOCK

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x30R_scX0rmZmehE6BrheXYvxw4JOcpu
"""



import time
import streamlit as st
import pandas as pd
import yfinance as yf
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use('Agg')

st.title("ðŸ“ˆ Real-Time Stock Price Prediction")
ticker = st.text_input("Enter Ticker Symbol", value="AAPL")
st.write("Predicting real-time stock prices using Linear Regression")

run_button = st.button("Run Prediction")

if run_button:
    model = LinearRegression()

    progress = st.empty()
    chart = st.empty()

    while True:
        progress.text("Fetching latest data...")

        df = yf.download(tickers=ticker, period='1d', interval='1m')
        if df.empty:
            st.warning("No data received. Waiting for update...")
            time.sleep(60)
            continue

        df.reset_index(inplace=True)
        df['Datetime'] = pd.to_datetime(df['Datetime'])
        df = df.dropna()

        df['Day'] = df['Datetime'].dt.day
        df['Month'] = df['Datetime'].dt.month
        df['Year'] = df['Datetime'].dt.year
        df['Weekday'] = df['Datetime'].dt.weekday

        features = ['Open', 'High', 'Low', 'Volume', 'Day', 'Month', 'Year', 'Weekday']
        if len(df) < 10:
            time.sleep(60)
            continue

        X = df[features]
        y = df['Close']

        model.fit(X, y)
        prediction = model.predict(X)

        fig, ax = plt.subplots()
        ax.plot(df['Datetime'], df['Close'], label='Actual')
        ax.plot(df['Datetime'], prediction, label='Predicted', linestyle='--')
        ax.set_xlabel("Time")
        ax.set_ylabel("Price")
        ax.set_title(f"{ticker} - Real-Time Prediction")
        ax.legend()
        chart.pyplot(fig)

        time.sleep(60)
